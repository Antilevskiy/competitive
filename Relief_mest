#include <iostream>
#include <vector>
using namespace std;
void output(int a[50][50], int n,m);
int main()
{ 
  int field[50][50];
  bool zero_field[50][50];
  bool visited[50][50];
  int T;
  long long v = 0;
  for(int t = 0; t < T; t++)
  { 
     int n,m;
     cin >> n >> m;
     for(int i = 0; i < n; i++)
     {
		 for(int j = 0; j < m; j++)
		 {
			 visited[i][j] = 0;
			 zero_field[i][j] = 1;
			 field[i][j] = 0;
			 cin >> field[i][j];
		 }
	 }
	 
	 int tmp = 0;
	 bool sliv = 0;
	 funcT(field,visited,zero_field,n,m,tmp,sliv);
	 v = v + tmp;
  }
  cout << v;
  return 0;
}

void func2(int field[50][50], bool visited[50][50], int zero_field[50][50], int n, int m, int k, int l, int& tmp, bool sliv)
{
	if(!visited[k][l])
	{
		visited[k][l] = 1;
		if(zero_field[k][l] == 0 && (k == 0 || l == 0) && !sliv)
		{
			func2(field,visited,zero_field,n,m,k+1,l,  /* ++ bool отвечающая за слив(если 1), то по рекурсии все следующие 0ли не будут учитываться(если найдутся)+++ */);
			func2(field,visited,zero_field,n,m,k,l+1, /* to je samoe*/);
		}
		else
		{
			tmp++;
			if(k != n-1)
			{   
				func2(field,visited,zero_field,n,m,k+1,l);
			}
			else if(sliv)
			   tmp = 0;
			if(l != m-1)
			{
				func2(field,visited,zero_field,n,m,k,l+1);
			}
			else if(sliv) 
			   tmp = 0;
		}	
	}
}

void funcT(int field[50][50], bool visited[50][50], int zero_field[50][50], int n, int m, int& tmp)
{
	for(int i = 0; i < n; i++)
	{
		for(int j = 0; j < n; j++)
		{   
			if(field[i][j] > 0)
			   field[i][j]--;

			if(fieled[i][j] == 0)
			{
				zero_field[i][j] = 0;
			}
		}
	}
	func2(field,visited,zero_field,n, m, 0, 0,tmp);
}

void output(int a[50][50], int n,m) 
{ 
  cout << "\n    ";
  for(int i = 0; i < n; i++)
  {
	  cout << i << "  ";
  }
  cout << "\n";
  cout << "\n";
  for(int i = 0; i < n; i++)
  {
	  cout << i << "  ";
	  for(int j = 0; j < n; j++)
	  {
		  cout << " "<< a[i][j] << " ";
	  }
	  cout << "\n";
  }	
}
